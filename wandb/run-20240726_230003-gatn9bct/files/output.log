Load model epoch:21 iterations:8426
Total Epochs: 3000, Total Iters: 1149000
Iters Per Epoch, Training: 0383, Validation: 023
logits==========+>torch.Size([1, 1, 1024])
pred_ids=======tensor([[909]], device='cuda:0'),
generated========tensor([], device='cuda:0', size=(64, 0), dtype=torch.int64)
logits==========+>torch.Size([1, 2, 1024])
pred_ids=======tensor([[909]], device='cuda:0'),
generated========tensor([[909]], device='cuda:0')
logits==========+>torch.Size([1, 3, 1024])
pred_ids=======tensor([[909]], device='cuda:0'),
generated========tensor([[909, 909]], device='cuda:0')
logits==========+>torch.Size([1, 4, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909]], device='cuda:0')
logits==========+>torch.Size([1, 5, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735]], device='cuda:0')
logits==========+>torch.Size([1, 6, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 7, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 8, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 9, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 10, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 11, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 12, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735]],
       device='cuda:0')
logits==========+>torch.Size([1, 13, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735]],
       device='cuda:0')
logits==========+>torch.Size([1, 14, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735]],
       device='cuda:0')
logits==========+>torch.Size([1, 15, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735]],
       device='cuda:0')
logits==========+>torch.Size([1, 16, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735]], device='cuda:0')
logits==========+>torch.Size([1, 17, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 18, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 19, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 20, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 21, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 22, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 23, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 24, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 25, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 26, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735]],
       device='cuda:0')
logits==========+>torch.Size([1, 27, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735]],
       device='cuda:0')
logits==========+>torch.Size([1, 28, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735]],
       device='cuda:0')
logits==========+>torch.Size([1, 29, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735]],
       device='cuda:0')
logits==========+>torch.Size([1, 30, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735]], device='cuda:0')
logits==========+>torch.Size([1, 31, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 32, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 33, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 34, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 35, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 36, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 37, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 38, 1024])
/root/miniconda3/envs/transformotion/lib/python3.7/site-packages/torch/nn/modules/container.py:435: UserWarning: Setting attributes on ParameterList is not supported.
pred_ids=======tensor([[735]], device='cuda:0'),
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 39, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 40, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735]],
       device='cuda:0')
logits==========+>torch.Size([1, 41, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735]],
       device='cuda:0')
logits==========+>torch.Size([1, 42, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735]],
       device='cuda:0')
logits==========+>torch.Size([1, 43, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735]],
       device='cuda:0')
logits==========+>torch.Size([1, 44, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735]], device='cuda:0')
logits==========+>torch.Size([1, 45, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 46, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 47, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 48, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 49, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 50, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 51, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 52, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 53, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 54, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735]],
       device='cuda:0')
logits==========+>torch.Size([1, 55, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735]],
       device='cuda:0')
logits==========+>torch.Size([1, 56, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735]],
       device='cuda:0')
logits==========+>torch.Size([1, 57, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735]],
       device='cuda:0')
logits==========+>torch.Size([1, 58, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735]], device='cuda:0')
logits==========+>torch.Size([1, 59, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 60, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 61, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 62, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 63, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 64, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 65, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 66, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 67, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 68, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735]],
       device='cuda:0')
logits==========+>torch.Size([1, 69, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735]],
       device='cuda:0')
logits==========+>torch.Size([1, 70, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735]],
       device='cuda:0')
logits==========+>torch.Size([1, 71, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735]],
       device='cuda:0')
logits==========+>torch.Size([1, 72, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735]], device='cuda:0')
logits==========+>torch.Size([1, 73, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 74, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 75, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 76, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 77, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735]], device='cuda:0')
logits==========+>torch.Size([1, 78, 1024])
pred_ids=======tensor([[735]], device='cuda:0'),
generated========tensor([[909, 909, 909, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
         735, 735, 735, 735, 735, 735, 735]], device='cuda:0')
Traceback (most recent call last):
  File "trainers/train_transformotion.py", line 150, in <module>
    trainer.train(train_loader, val_loader, eval_val_loader, eval_wrapper=eval_wrapper, plot_eval=plot_t2m)
  File "/root/Transformotion/trainers/../models/transformers/transformotion_trainer.py", line 153, in train
    plot_func=plot_eval, save_ckpt=False, save_anim=True
  File "/root/miniconda3/envs/transformotion/lib/python3.7/site-packages/torch/autograd/grad_mode.py", line 26, in decorate_context
    return func(*args, **kwargs)
  File "/root/Transformotion/trainers/../utils/eval_t2m.py", line 610, in evaluation_transformer
    pred_pose = trans.generate(clip_text[k:k+1], m_length, motion_ids[k:k+1])
  File "/root/miniconda3/envs/transformotion/lib/python3.7/site-packages/torch/autograd/grad_mode.py", line 26, in decorate_context
    return func(*args, **kwargs)
  File "/root/Transformotion/trainers/../models/transformers/tools.py", line 42, in inner
    out = fn(model, *args, **kwargs)
  File "/root/Transformotion/trainers/../models/transformers/transformotion.py", line 280, in generate
    logits, mems = self.forward(prompt_texts, generated, m_lens, labels=labels[:, k:k+1], mems=None, is_generating=True)
  File "/root/Transformotion/trainers/../models/transformers/transformotion.py", line 184, in forward
    prompt_logits = self.encode_text(prompt_texts)
  File "/root/Transformotion/trainers/../models/transformers/transformotion.py", line 166, in encode_text
    feat_clip_text = self.clip_model.encode_text(text).float()
  File "/root/miniconda3/envs/transformotion/lib/python3.7/site-packages/clip/model.py", line 348, in encode_text
    x = self.transformer(x)
  File "/root/miniconda3/envs/transformotion/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/root/miniconda3/envs/transformotion/lib/python3.7/site-packages/clip/model.py", line 203, in forward
    return self.resblocks(x)
  File "/root/miniconda3/envs/transformotion/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/root/miniconda3/envs/transformotion/lib/python3.7/site-packages/torch/nn/modules/container.py", line 117, in forward
    input = module(input)
  File "/root/miniconda3/envs/transformotion/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/root/miniconda3/envs/transformotion/lib/python3.7/site-packages/clip/model.py", line 190, in forward
    x = x + self.attention(self.ln_1(x))
  File "/root/miniconda3/envs/transformotion/lib/python3.7/site-packages/clip/model.py", line 187, in attention
    return self.attn(x, x, x, need_weights=False, attn_mask=self.attn_mask)[0]
  File "/root/miniconda3/envs/transformotion/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/root/miniconda3/envs/transformotion/lib/python3.7/site-packages/torch/nn/modules/activation.py", line 985, in forward
    attn_mask=attn_mask)
  File "/root/miniconda3/envs/transformotion/lib/python3.7/site-packages/torch/nn/functional.py", line 4146, in multi_head_attention_forward
    q, k, v = linear(query, in_proj_weight, in_proj_bias).chunk(3, dim=-1)
  File "/root/miniconda3/envs/transformotion/lib/python3.7/site-packages/torch/nn/functional.py", line 1694, in linear
    output += bias
KeyboardInterrupt